// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using lalocation.API.Data;

namespace lalocation.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190124055403_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024");

            modelBuilder.Entity("lalocation.API.Models.Adresse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CodePostal");

                    b.Property<string>("Complement");

                    b.Property<string>("Numero");

                    b.Property<string>("Pays");

                    b.Property<string>("Ville");

                    b.HasKey("Id");

                    b.ToTable("Adresses");
                });

            modelBuilder.Entity("lalocation.API.Models.Bien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AdresseId");

                    b.Property<DateTime>("DateDebutExploitation");

                    b.Property<DateTime>("DateFinExploitation");

                    b.Property<string>("Description");

                    b.Property<int?>("LocataireEncoursId");

                    b.Property<int?>("LocataireId");

                    b.Property<string>("Reference");

                    b.Property<int?>("StatutId");

                    b.Property<int?>("TypeId");

                    b.HasKey("Id");

                    b.HasIndex("AdresseId");

                    b.HasIndex("LocataireEncoursId");

                    b.HasIndex("LocataireId");

                    b.HasIndex("StatutId");

                    b.HasIndex("TypeId");

                    b.ToTable("Biens");
                });

            modelBuilder.Entity("lalocation.API.Models.BienProprietaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("BienId");

                    b.Property<int?>("ProprietaireId");

                    b.HasKey("Id");

                    b.HasIndex("BienId");

                    b.HasIndex("ProprietaireId");

                    b.ToTable("BienProprietaires");
                });

            modelBuilder.Entity("lalocation.API.Models.BienStatut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Libelle");

                    b.HasKey("Id");

                    b.ToTable("BienStatuts");
                });

            modelBuilder.Entity("lalocation.API.Models.BienType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Libelle");

                    b.HasKey("Id");

                    b.ToTable("BienTypes");
                });

            modelBuilder.Entity("lalocation.API.Models.Contrat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("BienId");

                    b.Property<DateTime>("DateCreation");

                    b.Property<DateTime>("DateDebut");

                    b.Property<DateTime?>("DateFin");

                    b.Property<int?>("LocataireId");

                    b.Property<int?>("PeriodiciteId");

                    b.Property<string>("Reference");

                    b.Property<int?>("StatutId");

                    b.HasKey("Id");

                    b.HasIndex("BienId");

                    b.HasIndex("LocataireId");

                    b.HasIndex("PeriodiciteId");

                    b.HasIndex("StatutId");

                    b.ToTable("Contrats");
                });

            modelBuilder.Entity("lalocation.API.Models.ContratDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("EstObligatoire");

                    b.Property<string>("Libelle");

                    b.HasKey("Id");

                    b.ToTable("ContratDocuments");
                });

            modelBuilder.Entity("lalocation.API.Models.ContratDocumentFournis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ContratId");

                    b.Property<DateTime>("DateCreation");

                    b.Property<int?>("TypeId");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.HasIndex("ContratId");

                    b.HasIndex("TypeId");

                    b.ToTable("ContratDocumentFournis");
                });

            modelBuilder.Entity("lalocation.API.Models.ContratStatut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Libelle");

                    b.HasKey("Id");

                    b.ToTable("ContratStatuts");
                });

            modelBuilder.Entity("lalocation.API.Models.Locataire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Reference");

                    b.Property<int?>("StatutId");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("StatutId");

                    b.HasIndex("UserId");

                    b.ToTable("Locataires");
                });

            modelBuilder.Entity("lalocation.API.Models.LocataireStatut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Libelle");

                    b.HasKey("Id");

                    b.ToTable("LocataireStatuts");
                });

            modelBuilder.Entity("lalocation.API.Models.Paiement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ContratId");

                    b.Property<DateTime>("DatePaiement");

                    b.Property<DateTime>("DatePaiementEffectif");

                    b.Property<int?>("PaiementModeId");

                    b.Property<int?>("PaiementMotifId");

                    b.Property<int>("PaiementTypeId");

                    b.Property<int>("PeriodiciteDetailId");

                    b.Property<int?>("StatutId");

                    b.HasKey("Id");

                    b.HasIndex("ContratId");

                    b.HasIndex("PaiementModeId");

                    b.HasIndex("PaiementMotifId");

                    b.HasIndex("StatutId");

                    b.ToTable("Paiements");
                });

            modelBuilder.Entity("lalocation.API.Models.PaiementMode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Libelle");

                    b.HasKey("Id");

                    b.ToTable("PaiementModes");
                });

            modelBuilder.Entity("lalocation.API.Models.PaiementMotif", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Libelle");

                    b.HasKey("Id");

                    b.ToTable("PaiementMotifs");
                });

            modelBuilder.Entity("lalocation.API.Models.PaiementMotifDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("PaiementId");

                    b.Property<int?>("PaiementMotifId");

                    b.Property<string>("TemplateUrl");

                    b.HasKey("Id");

                    b.HasIndex("PaiementId");

                    b.HasIndex("PaiementMotifId");

                    b.ToTable("PaiementMotifDocuments");
                });

            modelBuilder.Entity("lalocation.API.Models.PaiementStatut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Libelle");

                    b.HasKey("Id");

                    b.ToTable("PaiementStatuts");
                });

            modelBuilder.Entity("lalocation.API.Models.Periodicite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Periodicites");
                });

            modelBuilder.Entity("lalocation.API.Models.PeriodiciteDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Label");

                    b.Property<int?>("PeriodiciteId");

                    b.HasKey("Id");

                    b.HasIndex("PeriodiciteId");

                    b.ToTable("PeriodiciteDetail");
                });

            modelBuilder.Entity("lalocation.API.Models.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateAdded");

                    b.Property<string>("Description");

                    b.Property<bool>("IsMain");

                    b.Property<string>("Url");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("lalocation.API.Models.Proprietaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AdresseId");

                    b.Property<string>("Reference");

                    b.Property<int?>("StatutId");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("AdresseId");

                    b.HasIndex("StatutId");

                    b.HasIndex("UserId");

                    b.ToTable("Proprietaires");
                });

            modelBuilder.Entity("lalocation.API.Models.ProprietaireStatut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Libelle");

                    b.HasKey("Id");

                    b.ToTable("ProprietaireStatuts");
                });

            modelBuilder.Entity("lalocation.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<DateTime>("Created");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("Gender");

                    b.Property<string>("Interests");

                    b.Property<string>("Introduction");

                    b.Property<string>("KnownAs");

                    b.Property<DateTime>("LastActive");

                    b.Property<string>("LookingFor");

                    b.Property<byte[]>("PasswwordHash");

                    b.Property<byte[]>("PasswwordSalt");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("lalocation.API.Models.Value", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Values");
                });

            modelBuilder.Entity("lalocation.API.Models.Bien", b =>
                {
                    b.HasOne("lalocation.API.Models.Adresse", "Adresse")
                        .WithMany()
                        .HasForeignKey("AdresseId");

                    b.HasOne("lalocation.API.Models.Locataire", "LocataireEncours")
                        .WithMany("LocationsEnCours")
                        .HasForeignKey("LocataireEncoursId");

                    b.HasOne("lalocation.API.Models.Locataire")
                        .WithMany("LocationsHistorique")
                        .HasForeignKey("LocataireId");

                    b.HasOne("lalocation.API.Models.BienStatut", "Statut")
                        .WithMany()
                        .HasForeignKey("StatutId");

                    b.HasOne("lalocation.API.Models.BienType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");
                });

            modelBuilder.Entity("lalocation.API.Models.BienProprietaire", b =>
                {
                    b.HasOne("lalocation.API.Models.Bien", "Bien")
                        .WithMany()
                        .HasForeignKey("BienId");

                    b.HasOne("lalocation.API.Models.Proprietaire", "Proprietaire")
                        .WithMany()
                        .HasForeignKey("ProprietaireId");
                });

            modelBuilder.Entity("lalocation.API.Models.Contrat", b =>
                {
                    b.HasOne("lalocation.API.Models.Bien", "Bien")
                        .WithMany("Contrats")
                        .HasForeignKey("BienId");

                    b.HasOne("lalocation.API.Models.Locataire", "Locataire")
                        .WithMany()
                        .HasForeignKey("LocataireId");

                    b.HasOne("lalocation.API.Models.Periodicite", "Periodicite")
                        .WithMany()
                        .HasForeignKey("PeriodiciteId");

                    b.HasOne("lalocation.API.Models.ContratStatut", "Statut")
                        .WithMany()
                        .HasForeignKey("StatutId");
                });

            modelBuilder.Entity("lalocation.API.Models.ContratDocumentFournis", b =>
                {
                    b.HasOne("lalocation.API.Models.Contrat", "Contrat")
                        .WithMany("DocumentsFournis")
                        .HasForeignKey("ContratId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("lalocation.API.Models.ContratDocument", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");
                });

            modelBuilder.Entity("lalocation.API.Models.Locataire", b =>
                {
                    b.HasOne("lalocation.API.Models.LocataireStatut", "Statut")
                        .WithMany()
                        .HasForeignKey("StatutId");

                    b.HasOne("lalocation.API.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("lalocation.API.Models.Paiement", b =>
                {
                    b.HasOne("lalocation.API.Models.Contrat", "Contrat")
                        .WithMany()
                        .HasForeignKey("ContratId");

                    b.HasOne("lalocation.API.Models.PaiementMode", "PaiementMode")
                        .WithMany()
                        .HasForeignKey("PaiementModeId");

                    b.HasOne("lalocation.API.Models.PaiementMotif", "PaiementMotif")
                        .WithMany()
                        .HasForeignKey("PaiementMotifId");

                    b.HasOne("lalocation.API.Models.PaiementStatut", "Statut")
                        .WithMany()
                        .HasForeignKey("StatutId");
                });

            modelBuilder.Entity("lalocation.API.Models.PaiementMotifDocument", b =>
                {
                    b.HasOne("lalocation.API.Models.Paiement")
                        .WithMany("Documents")
                        .HasForeignKey("PaiementId");

                    b.HasOne("lalocation.API.Models.PaiementMotif", "PaiementMotif")
                        .WithMany("Documents")
                        .HasForeignKey("PaiementMotifId");
                });

            modelBuilder.Entity("lalocation.API.Models.PeriodiciteDetail", b =>
                {
                    b.HasOne("lalocation.API.Models.Periodicite")
                        .WithMany("PeriodiciteDetail")
                        .HasForeignKey("PeriodiciteId");
                });

            modelBuilder.Entity("lalocation.API.Models.Photo", b =>
                {
                    b.HasOne("lalocation.API.Models.User", "User")
                        .WithMany("Photos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("lalocation.API.Models.Proprietaire", b =>
                {
                    b.HasOne("lalocation.API.Models.Adresse", "Adresse")
                        .WithMany()
                        .HasForeignKey("AdresseId");

                    b.HasOne("lalocation.API.Models.ProprietaireStatut", "Statut")
                        .WithMany()
                        .HasForeignKey("StatutId");

                    b.HasOne("lalocation.API.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
